<?xml version="1.0" encoding="UTF-8"?>
<questestinterop xmlns="http://www.imsglobal.org/xsd/ims_qtiasiv1p2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.imsglobal.org/xsd/ims_qtiasiv1p2 http://www.imsglobal.org/xsd/ims_qtiasiv1p2p1.xsd">
  <assessment ident="gefd3227c5ca9a194e3ca06029bcb2748" title="MERN Stack Frontend Development - Complete Quiz">
    <qtimetadata>
      <qtimetadatafield>
        <fieldlabel>qmd_timelimit</fieldlabel>
        <fieldentry>7200</fieldentry>
      </qtimetadatafield>
      <qtimetadatafield>
        <fieldlabel>cc_maxattempts</fieldlabel>
        <fieldentry>3</fieldentry>
      </qtimetadatafield>
    </qtimetadata>
    <section ident="root_section">
      <item ident="g817f92cc43eb47ca4412ce35d86ccede" title="Question 1">
        <itemmetadata>
          <qtimetadata>
            <qtimetadatafield>
              <fieldlabel>question_type</fieldlabel>
              <fieldentry>multiple_choice_question</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>points_possible</fieldlabel>
              <fieldentry>2.0</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>original_answer_ids</fieldlabel>
              <fieldentry>22473,21580,65472,43763</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>assessment_question_identifierref</fieldlabel>
              <fieldentry>g5ade2d4157085d87137748944e53ac6a</fieldentry>
            </qtimetadatafield>
          </qtimetadata>
        </itemmetadata>
        <presentation>
          <material>
            <mattext texttype="text/html">&lt;div&gt;&lt;div class="text"&gt;
                  &lt;p&gt;&lt;strong&gt;Category:&lt;/strong&gt; React Fundamentals&lt;/p&gt;
                  &lt;p&gt;&lt;strong&gt;Difficulty:&lt;/strong&gt; beginner&lt;/p&gt;
                  &lt;div class="question-text"&gt;What is the correct way to create a functional component in React?&lt;/div&gt;
                  
                &lt;/div&gt;&lt;/div&gt;</mattext>
          </material>
          <response_lid ident="response1" rcardinality="Single">
            <render_choice>
              <response_label ident="22473">
                <material>
                  <mattext texttype="text/html">function MyComponent() { return &amp;lt;div&amp;gt;Hello&amp;lt;/div&amp;gt;; }</mattext>
                </material>
              </response_label>
              <response_label ident="21580">
                <material>
                  <mattext texttype="text/html">const MyComponent = () =&amp;gt; { return &amp;lt;div&amp;gt;Hello&amp;lt;/div&amp;gt;; }</mattext>
                </material>
              </response_label>
              <response_label ident="65472">
                <material>
                  <mattext texttype="text/html">const MyComponent = function() { return &amp;lt;div&amp;gt;Hello&amp;lt;/div&amp;gt;; }</mattext>
                </material>
              </response_label>
              <response_label ident="43763">
                <material>
                  <mattext texttype="text/plain">All of the above</mattext>
                </material>
              </response_label>
            </render_choice>
          </response_lid>
        </presentation>
        <resprocessing>
          <outcomes>
            <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
          </outcomes>
          <respcondition continue="No">
            <conditionvar>
              <varequal respident="response1">43763</varequal>
            </conditionvar>
            <setvar action="Set" varname="SCORE">100</setvar>
            <displayfeedback feedbacktype="Response" linkrefid="correct_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <other/>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="general_incorrect_fb"/>
          </respcondition>
        </resprocessing>
        <itemfeedback ident="correct_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">&lt;div style="color: #27ae60;  margin-bottom: 10px;"&gt;✓ Correct!&lt;/div&gt;
                  &lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt; All three syntaxes are valid ways to create functional components in React.&lt;/p&gt;</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="general_incorrect_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">&lt;div style="color: #e74c3c;  margin-bottom: 10px;"&gt;✗ Incorrect&lt;/div&gt;
                  &lt;p&gt;&lt;strong&gt;Correct answer:&lt;/strong&gt; All of the above&lt;/p&gt;
                  &lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt; All three syntaxes are valid ways to create functional components in React.&lt;/p&gt;</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
      </item>
      <item ident="g5a698bd5f0ae99f2a5ae2e024a0d63f8" title="Question 2">
        <itemmetadata>
          <qtimetadata>
            <qtimetadatafield>
              <fieldlabel>question_type</fieldlabel>
              <fieldentry>multiple_choice_question</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>points_possible</fieldlabel>
              <fieldentry>2.0</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>original_answer_ids</fieldlabel>
              <fieldentry>58227,85380,15148,96581</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>assessment_question_identifierref</fieldlabel>
              <fieldentry>g4098b7b02def2008fdaaf9eba0f3e1d3</fieldentry>
            </qtimetadatafield>
          </qtimetadata>
        </itemmetadata>
        <presentation>
          <material>
            <mattext texttype="text/html">&lt;div&gt;&lt;div class="text"&gt;
                  &lt;p&gt;&lt;strong&gt;Category:&lt;/strong&gt; React Fundamentals&lt;/p&gt;
                  &lt;p&gt;&lt;strong&gt;Difficulty:&lt;/strong&gt; beginner&lt;/p&gt;
                  &lt;div class="question-text"&gt;Which hook is used to manage state in functional components?&lt;/div&gt;
                  
                &lt;/div&gt;&lt;/div&gt;</mattext>
          </material>
          <response_lid ident="response1" rcardinality="Single">
            <render_choice>
              <response_label ident="58227">
                <material>
                  <mattext texttype="text/plain">useEffect</mattext>
                </material>
              </response_label>
              <response_label ident="85380">
                <material>
                  <mattext texttype="text/plain">useState</mattext>
                </material>
              </response_label>
              <response_label ident="15148">
                <material>
                  <mattext texttype="text/plain">useContext</mattext>
                </material>
              </response_label>
              <response_label ident="96581">
                <material>
                  <mattext texttype="text/plain">useReducer</mattext>
                </material>
              </response_label>
            </render_choice>
          </response_lid>
        </presentation>
        <resprocessing>
          <outcomes>
            <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
          </outcomes>
          <respcondition continue="No">
            <conditionvar>
              <varequal respident="response1">85380</varequal>
            </conditionvar>
            <setvar action="Set" varname="SCORE">100</setvar>
            <displayfeedback feedbacktype="Response" linkrefid="correct_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <other/>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="general_incorrect_fb"/>
          </respcondition>
        </resprocessing>
        <itemfeedback ident="correct_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">&lt;div style="color: #27ae60;  margin-bottom: 10px;"&gt;✓ Correct!&lt;/div&gt;
                  &lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt; useState is the primary hook for managing component state in functional components.&lt;/p&gt;</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="general_incorrect_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">&lt;div style="color: #e74c3c;  margin-bottom: 10px;"&gt;✗ Incorrect&lt;/div&gt;
                  &lt;p&gt;&lt;strong&gt;Correct answer:&lt;/strong&gt; useState&lt;/p&gt;
                  &lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt; useState is the primary hook for managing component state in functional components.&lt;/p&gt;</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
      </item>
      <item ident="g891a5c8aac8356bfd8d4071e43bcec51" title="Question 3">
        <itemmetadata>
          <qtimetadata>
            <qtimetadatafield>
              <fieldlabel>question_type</fieldlabel>
              <fieldentry>multiple_choice_question</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>points_possible</fieldlabel>
              <fieldentry>3.0</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>original_answer_ids</fieldlabel>
              <fieldentry>67313,63199,57410,44884</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>assessment_question_identifierref</fieldlabel>
              <fieldentry>g1aeb33b13586d17e458f60162edfc3fa</fieldentry>
            </qtimetadatafield>
          </qtimetadata>
        </itemmetadata>
        <presentation>
          <material>
            <mattext texttype="text/html">&lt;div&gt;&lt;div class="text"&gt;
                  &lt;p&gt;&lt;strong&gt;Category:&lt;/strong&gt; React Fundamentals&lt;/p&gt;
                  &lt;p&gt;&lt;strong&gt;Difficulty:&lt;/strong&gt; intermediate&lt;/p&gt;
                  &lt;div class="question-text"&gt;What will this code output?&lt;/div&gt;
                  &lt;pre style="background: #f4f4f4; padding: 15px; border-radius: 4px; overflow-x: auto; margin: 15px 0;"&gt;&lt;code&gt;const [count, setCount] = useState(0);

const handleClick = () =&amp;gt; {
  setCount(count + 1);
  setCount(count + 1);
  console.log(count);
};&lt;/code&gt;&lt;/pre&gt;
                &lt;/div&gt;&lt;/div&gt;</mattext>
          </material>
          <response_lid ident="response1" rcardinality="Single">
            <render_choice>
              <response_label ident="67313">
                <material>
                  <mattext texttype="text/plain">0, then count becomes 2</mattext>
                </material>
              </response_label>
              <response_label ident="63199">
                <material>
                  <mattext texttype="text/plain">2, then count becomes 2</mattext>
                </material>
              </response_label>
              <response_label ident="57410">
                <material>
                  <mattext texttype="text/plain">0, then count becomes 1</mattext>
                </material>
              </response_label>
              <response_label ident="44884">
                <material>
                  <mattext texttype="text/plain">1, then count becomes 2</mattext>
                </material>
              </response_label>
            </render_choice>
          </response_lid>
        </presentation>
        <resprocessing>
          <outcomes>
            <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
          </outcomes>
          <respcondition continue="No">
            <conditionvar>
              <varequal respident="response1">57410</varequal>
            </conditionvar>
            <setvar action="Set" varname="SCORE">100</setvar>
            <displayfeedback feedbacktype="Response" linkrefid="correct_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <other/>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="general_incorrect_fb"/>
          </respcondition>
        </resprocessing>
        <itemfeedback ident="correct_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">&lt;div style="color: #27ae60;  margin-bottom: 10px;"&gt;✓ Correct!&lt;/div&gt;
                  &lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt; State updates are asynchronous and batched. The console.log runs with the current value (0), and both setCount calls use the same stale closure value.&lt;/p&gt;</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="general_incorrect_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">&lt;div style="color: #e74c3c;  margin-bottom: 10px;"&gt;✗ Incorrect&lt;/div&gt;
                  &lt;p&gt;&lt;strong&gt;Correct answer:&lt;/strong&gt; 0, then count becomes 1&lt;/p&gt;
                  &lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt; State updates are asynchronous and batched. The console.log runs with the current value (0), and both setCount calls use the same stale closure value.&lt;/p&gt;</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
      </item>
      <item ident="g8abfb446405f150b7998d3c755a6eee4" title="Question 4">
        <itemmetadata>
          <qtimetadata>
            <qtimetadatafield>
              <fieldlabel>question_type</fieldlabel>
              <fieldentry>true_false_question</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>points_possible</fieldlabel>
              <fieldentry>2.0</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>original_answer_ids</fieldlabel>
              <fieldentry>22755,85252</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>assessment_question_identifierref</fieldlabel>
              <fieldentry>g7ce14505cbd253c0e9df08f73b0a130b</fieldentry>
            </qtimetadatafield>
          </qtimetadata>
        </itemmetadata>
        <presentation>
          <material>
            <mattext texttype="text/html">&lt;div&gt;&lt;div class="text"&gt;
                  &lt;p&gt;&lt;strong&gt;Category:&lt;/strong&gt; React Fundamentals&lt;/p&gt;
                  &lt;p&gt;&lt;strong&gt;Difficulty:&lt;/strong&gt; beginner&lt;/p&gt;
                  &lt;div class="question-text"&gt;useEffect runs after every render by default.&lt;/div&gt;
                  
                &lt;/div&gt;&lt;/div&gt;</mattext>
          </material>
          <response_lid ident="response1" rcardinality="Single">
            <render_choice>
              <response_label ident="22755">
                <material>
                  <mattext texttype="text/plain">True</mattext>
                </material>
              </response_label>
              <response_label ident="85252">
                <material>
                  <mattext texttype="text/plain">False</mattext>
                </material>
              </response_label>
            </render_choice>
          </response_lid>
        </presentation>
        <resprocessing>
          <outcomes>
            <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
          </outcomes>
          <respcondition continue="No">
            <conditionvar>
              <varequal respident="response1">22755</varequal>
            </conditionvar>
            <setvar action="Set" varname="SCORE">100</setvar>
            <displayfeedback feedbacktype="Response" linkrefid="correct_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <other/>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="general_incorrect_fb"/>
          </respcondition>
        </resprocessing>
        <itemfeedback ident="correct_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">&lt;div style="color: #27ae60;  margin-bottom: 10px;"&gt;✓ Correct!&lt;/div&gt;
                  &lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt; useEffect runs after every render when no dependency array is provided.&lt;/p&gt;</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="general_incorrect_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">&lt;div style="color: #e74c3c;  margin-bottom: 10px;"&gt;✗ Incorrect&lt;/div&gt;
                  &lt;p&gt;&lt;strong&gt;Correct answer:&lt;/strong&gt; True&lt;/p&gt;
                  &lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt; useEffect runs after every render when no dependency array is provided.&lt;/p&gt;</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
      </item>
      <item ident="gf32071795760ea1f1723b5356d5276f5" title="Question 5">
        <itemmetadata>
          <qtimetadata>
            <qtimetadatafield>
              <fieldlabel>question_type</fieldlabel>
              <fieldentry>multiple_choice_question</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>points_possible</fieldlabel>
              <fieldentry>2.0</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>original_answer_ids</fieldlabel>
              <fieldentry>72732,61510,35233,57251</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>assessment_question_identifierref</fieldlabel>
              <fieldentry>g063d7cdd4ab4985cd08ae4888194f0ea</fieldentry>
            </qtimetadatafield>
          </qtimetadata>
        </itemmetadata>
        <presentation>
          <material>
            <mattext texttype="text/html">&lt;div&gt;&lt;div class="text"&gt;
                  &lt;p&gt;&lt;strong&gt;Category:&lt;/strong&gt; React Fundamentals&lt;/p&gt;
                  &lt;p&gt;&lt;strong&gt;Difficulty:&lt;/strong&gt; beginner&lt;/p&gt;
                  &lt;div class="question-text"&gt;What is the correct syntax for conditional rendering in JSX?&lt;/div&gt;
                  
                &lt;/div&gt;&lt;/div&gt;</mattext>
          </material>
          <response_lid ident="response1" rcardinality="Single">
            <render_choice>
              <response_label ident="72732">
                <material>
                  <mattext texttype="text/html">{condition ? &amp;lt;div&amp;gt;True&amp;lt;/div&amp;gt; : &amp;lt;div&amp;gt;False&amp;lt;/div&amp;gt;}</mattext>
                </material>
              </response_label>
              <response_label ident="61510">
                <material>
                  <mattext texttype="text/html">{if(condition) &amp;lt;div&amp;gt;True&amp;lt;/div&amp;gt; else &amp;lt;div&amp;gt;False&amp;lt;/div&amp;gt;}</mattext>
                </material>
              </response_label>
              <response_label ident="35233">
                <material>
                  <mattext texttype="text/html">{condition &amp;amp;&amp;amp; &amp;lt;div&amp;gt;True&amp;lt;/div&amp;gt;}</mattext>
                </material>
              </response_label>
              <response_label ident="57251">
                <material>
                  <mattext texttype="text/plain">Both a and c</mattext>
                </material>
              </response_label>
            </render_choice>
          </response_lid>
        </presentation>
        <resprocessing>
          <outcomes>
            <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
          </outcomes>
          <respcondition continue="No">
            <conditionvar>
              <varequal respident="response1">57251</varequal>
            </conditionvar>
            <setvar action="Set" varname="SCORE">100</setvar>
            <displayfeedback feedbacktype="Response" linkrefid="correct_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <other/>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="general_incorrect_fb"/>
          </respcondition>
        </resprocessing>
        <itemfeedback ident="correct_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">&lt;div style="color: #27ae60;  margin-bottom: 10px;"&gt;✓ Correct!&lt;/div&gt;
                  &lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt; Both ternary operator and logical AND operator are valid for conditional rendering.&lt;/p&gt;</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="general_incorrect_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">&lt;div style="color: #e74c3c;  margin-bottom: 10px;"&gt;✗ Incorrect&lt;/div&gt;
                  &lt;p&gt;&lt;strong&gt;Correct answer:&lt;/strong&gt; Both a and c&lt;/p&gt;
                  &lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt; Both ternary operator and logical AND operator are valid for conditional rendering.&lt;/p&gt;</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
      </item>
    </section>
  </assessment>
</questestinterop>
